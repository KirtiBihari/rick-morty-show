{"version":3,"sources":["assets/images/rick-and-morty-logo.svg","components/header/header.js","components/footer/footer.js","components/imageContent/imageContent.js","components/infoTile/infoTile.js","containers/dataListContainer/dataListContainer.js","store/actions/actions.js","components/filterList/filterList.js","containers/filterContainer/filterContainer.js","components/chipItem/chipItem.js","components/filterInfo/filterInfo.js","components/searchBar/searchBar.js","components/sortingOption/sortingOption.js","containers/searchSortContainer/searchSortContainer.js","containers/baseContainer/baseContainer.js","components/layout/layout.js","store/reducers/rootReducer.js","shared/utility/utility.js","store/api.js","store/saga.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","href","src","logoImg","Footer","ImageContent","id","name","created","image","yearsOld","DOB","today","Date","birthDate","m","getMonth","age","getFullYear","getDate","getYearsOld","InfoTile","tileData","status","species","gender","origin","location","imageContentProps","connect","state","dataList","filteredDataList","isFilterApplied","tileDataList","length","map","item","key","requestApiData","type","receiveApiData","data","FilterList","heading","filterData","selectedFilters","handleChange","fdata","value","checked","itemId","filter","f","onChange","e","htmlFor","filters","dispatch","updateFilterData","isMobile","useState","showFilter","setShowFilter","useEffect","filterKeys","Object","keys","curItem","filterKey","currentItem","toLowerCase","target","filterList","fkey","onClick","event","preventDefault","aria-hidden","ChipItem","handleClose","FilterInfo","SearchBar","handleSearch","searchText","setSearchText","sortOptions","displayName","val","SortingOption","handleSort","removeFilter","searchFilter","sortFilter","text","sortKey","BaseContainer","setIsMobile","handleWindowSizeChange","width","window","innerWidth","document","documentElement","clientWidth","body","addEventListener","removeEventListener","bindActionCreators","Fragment","initState","dataInfo","nonList","isSearchFilter","isSortFilter","updateDataList","action","results","info","getFilteredData","isValid","some","indexOf","validateFilter","removeFilteritem","filterItem","existedItemIndex","findIndex","splice","updateFilter","isChecked","push","searchFilterList","includes","sort","order","property","sortOrder","a","b","valA","valB","dynamicsort","rootReducer","fetchData","fetch","response","json","console","log","getApiData","mySaga","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","App","store","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a37f9e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-and-morty-logo.d772ce88.svg\";","import React from 'react';\r\nimport './header.scss';\r\nimport logoImg from '../../assets/images/rick-and-morty-logo.svg';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div className='headerContainer'>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"#\"><img src={ logoImg } /></a>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className='footerContainer'>\r\n            <p>@copyright</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './imageContent.scss';\r\n\r\nconst ImageContent = (props) => {\r\n    const { id, name, created, image } = props;\r\n\r\n    const getYearsOld = (DOB) => {\r\n        const today = new Date();\r\n        const birthDate = new Date(DOB);\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        \r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age = age - 1;\r\n        }\r\n    \r\n        return age;\r\n    }\r\n\r\n    const yearsOld = created ? getYearsOld(created) : 0;\r\n\r\n    return (\r\n        <div className='imageContent'>\r\n            <img src={ image } />\r\n            <div className='info'>\r\n                <span className='name'>{name}</span>\r\n                <span className='created'>{`id: ${ id } - created ${ yearsOld } ${ yearsOld > 1 ? 'years' : 'year' } ago`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageContent;","import React from 'react';\r\nimport './infoTile.scss';\r\nimport ImageContent from '../imageContent/imageContent';\r\n\r\nconst InfoTile = (props) => {\r\n    const {\r\n            id,\r\n            name,\r\n            created,\r\n            image,\r\n            status,\r\n            species,\r\n            gender,\r\n            origin,\r\n            location\r\n        } = props.tileData;\r\n    const imageContentProps = {\r\n        id,\r\n        name,\r\n        created,\r\n        image\r\n    };\r\n    return (\r\n        <div className='infoTile'>\r\n            <ImageContent { ...imageContentProps } />\r\n            <ul className=\"info-details\">\r\n                <li className=\"info-data\">\r\n                    <span className='lbl'>STATUS</span>\r\n                    <span className='val'>{status}</span>\r\n                </li>\r\n                <li className=\"info-data\">\r\n                    <span className='lbl'>SPECIES</span>\r\n                    <span className='val'>{species}</span>\r\n                </li>\r\n                <li className=\"info-data\">\r\n                    <span className='lbl'>GENDER</span>\r\n                    <span className='val'>{gender}</span>\r\n                </li>\r\n                <li className=\"info-data\">\r\n                    <span className='lbl'>ORIGIN</span>\r\n                    <span className='val'>{origin.name}</span>\r\n                </li>\r\n                <li className=\"info-data\">\r\n                    <span className='lbl'>LAST LOCATION</span>\r\n                    <span className='val'>{location.name}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoTile;","import React, { useState, useEffect } from 'react';\r\nimport './dataListContainer.scss';\r\nimport InfoTile from '../../components/infoTile/infoTile';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DataListContainer = (props) => {\r\n    const tileDataList = props.isFilterApplied ? props.filteredDataList : props.dataList;\r\n\r\n    return (\r\n        <div className='dataListContainer'>\r\n            { (tileDataList && tileDataList.length > 0) ?\r\n                tileDataList.map(item => (\r\n                    <InfoTile tileData={ item } key={ item.id } />\r\n                )) : <label className='noItemMsg'>No Items</label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dataList: state.dataList,\r\n    filteredDataList: state.filteredDataList,\r\n    isFilterApplied: state.isFilterApplied\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(DataListContainer);\r\n","export const REQUEST_API_DATA = 'REQUEST_API_DATA';\r\nexport const RECEIVE_API_DATA = 'RECEIVE_API_DATA';\r\nexport const UPDATE_FILTER_DATA = 'UPDATE_FILTER_DATA';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\nexport const SEARCH_FILTER = 'SEARCH_FILTER';\r\nexport const SORT_FILTER = 'SORT_FILTER';\r\n\r\nexport const requestApiData = () => ({ type: REQUEST_API_DATA });\r\nexport const receiveApiData = data => ({ type: RECEIVE_API_DATA, data });\r\nexport const updateFilterData = data => ({ type: UPDATE_FILTER_DATA, data });\r\nexport const removeFilter = data => ({ type: REMOVE_FILTER, data });\r\nexport const searchFilter = data => ({ type: SEARCH_FILTER, data });\r\nexport const sortFilter = data => ({ type: SORT_FILTER, data })","import React from 'react';\r\nimport './filterList.scss';\r\n\r\nconst FilterList = (props) => {\r\n    const { heading, filterData, selectedFilters, handleChange } = props;\r\n    const isFilterSelected = (itemId) => {\r\n        return selectedFilters.filter(f => f.id === itemId).length > 0;\r\n    }\r\n    return (\r\n        <div className='filterList'>\r\n            <label className='heading'>{heading}</label>\r\n            <ul>\r\n                {\r\n                    filterData.length > 0 && filterData.map((fdata) => (\r\n                        <li key={ fdata.id }>\r\n                            <input type=\"checkbox\" name=\"checkbox\" id={ `chk_${ fdata.id }` } value={ fdata.id } checked={ isFilterSelected(fdata.id) } onChange={ (e) => handleChange(e, fdata, heading) } />\r\n                            <label htmlFor={ `chk_${ fdata.id }` }>{fdata.name}</label>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterList;","import React, { useState, useEffect } from 'react';\r\nimport './filterContainer.scss';\r\nimport { updateFilterData } from '../../store/actions/actions';\r\nimport FilterList from '../../components/filterList/filterList';\r\nimport { connect } from 'react-redux';\r\n\r\nconst FilterContainer = (props) => {\r\n    const { isMobile } = props;\r\n    const [ showFilter, setShowFilter ] = useState(true);\r\n    useEffect(()=> {\r\n        setShowFilter(isMobile ? false : true);\r\n    }, [])\r\n    const filterKeys = Object.keys(props.filters).length > 0 ? Object.keys(props.filters) : [];\r\n    const handleChange = (e, curItem, filterKey) => {\r\n        const currentItem = { ...curItem, filterKey: filterKey.toLowerCase() };\r\n        props.updateFilterData({ item: currentItem, checked:e.target.checked })\r\n    }\r\n    const handleShowFilter = (e) => {\r\n        e.preventDefault();\r\n        setShowFilter(!showFilter);\r\n    }\r\n\r\n    const filterList = (<div className=\"filters\">\r\n        { filterKeys.length > 0 && filterKeys.map((fkey) => (\r\n            <FilterList key={ fkey } filterData={ props.filters[ fkey ] } selectedFilters={ props.selectedFilters } heading={ fkey } handleChange={ handleChange }/>\r\n        ))\r\n        }\r\n    </div>);\r\n\r\n    return (\r\n        <div className='filterContainer'>\r\n            <label className='filterHeader'>\r\n                <span className='headingText'>Filters</span>\r\n                { isMobile &&\r\n                    <button className=\"btn\" onClick={ (event) => handleShowFilter(event) }>\r\n                        { !showFilter && <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> }\r\n                        { showFilter && <i className=\"fa fa-minus-circle\" aria-hidden=\"true\"></i> }\r\n                    </button> }\r\n            </label>\r\n            { showFilter ? filterList : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filters: state.filters,\r\n    selectedFilters: state.selectedFilters\r\n});\r\n\r\nconst mapDispatchToProps= (dispatch) =>{\r\n    return {\r\n        updateFilterData: (data) => { dispatch(updateFilterData( data )) }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\r\n","import React from 'react';\r\nimport './chipItem.scss';\r\n\r\nconst ChipItem = (props) => {\r\n    const { item, handleClose } = props;\r\n\r\n    return (\r\n        <div className='chipItem'>\r\n            <label>{item.name}</label>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={ () => handleClose(item) }></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChipItem;","import React from 'react';\r\nimport './filterInfo.scss';\r\nimport ChipItem from '../chipItem/chipItem';\r\n\r\nconst FilterInfo = (props) => {\r\n    const { selectedFilters, handleClose } = props;\r\n\r\n    return (\r\n        selectedFilters.length > 0 ? <div className='filterInfo'>\r\n            <label className='heading'>Selected Filters</label>\r\n            <div className='chipList'>\r\n                {  selectedFilters.map(item => (\r\n                    <ChipItem item={ item } handleClose={ handleClose }/>\r\n                ))\r\n                }\r\n            </div>\r\n        </div> : null\r\n    );\r\n}\r\n\r\nexport default FilterInfo;","import React, { useState } from 'react';\r\nimport './searchBar.scss';\r\n\r\nconst SearchBar = (props) => {\r\n    const { isMobile, handleSearch } = props;\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const searchTextChange = (e) => {\r\n        setSearchText(e.target.value);\r\n\r\n        if(isMobile) {\r\n            handleSearch(e.target.value)\r\n        }\r\n    }\r\n    const searchBtnClick = () => {\r\n        handleSearch(searchText)\r\n    };\r\n     \r\n    return (\r\n        <div className='searchBar'>\r\n            <label className='heading'>Search by Name</label>\r\n            <div className='searchTextBox'>\r\n                <input type='text' className='searchText'  value={ searchText } onChange={ (event) => searchTextChange(event) }/>\r\n                {!isMobile && <button onClick={ () => searchBtnClick() }>Search</button>}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './sortingOption.scss';\r\nconst sortOptions = [\r\n    { id:1, displayName: 'Ascending', val: 'asc' },\r\n    { id:2, displayName: 'Descending', val: 'desc' }\r\n]\r\n\r\nconst SortingOption = (props) => {\r\n    const { handleSort } = props;\r\n    return (\r\n        <div className='sortingOption'>\r\n            <label className='heading'>Sort by ID</label>\r\n            <select onChange={ (event) => handleSort(event) }>\r\n                {sortOptions.map(item => (\r\n                    <option value={ item.val } key={ item.id }>{item.displayName}</option> \r\n                ))\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortingOption;","import React from 'react';\r\nimport './searchSortContainer.scss';\r\nimport { connect } from 'react-redux';\r\nimport { removeFilter, searchFilter, sortFilter } from '../../store/actions/actions';\r\nimport FilterInfo from '../../components/filterInfo/filterInfo';\r\nimport SearchBar from '../../components/searchBar/searchBar';\r\nimport SortingOption from '../../components/sortingOption/sortingOption';\r\n\r\nconst SearchSortContainer = (props) => {\r\n\r\n    const handleClose = (item) => {\r\n        props.removeFilter(item);\r\n    }\r\n    const handleSearch = (text) => {\r\n        props.searchFilter({ searchText: text });\r\n    }\r\n    const handleSort = (e) => {\r\n        props.sortFilter({ sortKey: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <div className='searchSortContainer'>\r\n            <FilterInfo selectedFilters={ props.selectedFilters } handleClose={ handleClose }/>\r\n            <div className='searchSortcontent'>\r\n                <SearchBar isMobile={ props.isMobile } handleSearch={ handleSearch }/>\r\n                <SortingOption handleSort={ handleSort } />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    selectedFilters: state.selectedFilters\r\n});\r\n\r\nconst mapDispatchToProps= (dispatch) =>{\r\n    return {\r\n        removeFilter: (data) => { dispatch(removeFilter( data )) },\r\n        searchFilter: (data) => { dispatch(searchFilter( data )) },\r\n        sortFilter: (data) => { dispatch(sortFilter( data )) }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchSortContainer);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './baseContainer.scss';\r\nimport DataListContainer from '../dataListContainer/dataListContainer';\r\nimport FilterContainer from '../filterContainer/filterContainer';\r\nimport SearchSortContainer from '../searchSortContainer/searchSortContainer';\r\n\r\nconst BaseContainer = (props) => {\r\n    const [ isMobile, setIsMobile ] = useState(false);\r\n    const handleWindowSizeChange = () => {\r\n        const width = window.innerWidth \r\n        || document.documentElement.clientWidth \r\n        || document.body.clientWidth;\r\n\r\n        setIsMobile(width < 768);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        handleWindowSizeChange();\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        <div className='baseContainer'>\r\n            <FilterContainer isMobile={ isMobile }/>\r\n            <div className=\"dataContent\">\r\n                <SearchSortContainer isMobile={ isMobile } />\r\n                <DataListContainer />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BaseContainer;","import React, { useEffect } from 'react';\r\nimport Header from '../header/header';\r\nimport Footer from '../footer/footer';\r\nimport BaseContainer from '../../containers/baseContainer/baseContainer';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { requestApiData } from '../../store/actions/actions';\r\nimport './layout.scss';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.requestApiData();\r\n      }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <BaseContainer />\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ requestApiData }, dispatch);\r\n\r\nexport default connect(null, mapDispatchToProps)(Layout);","import { RECEIVE_API_DATA, UPDATE_FILTER_DATA, REMOVE_FILTER, SEARCH_FILTER, SORT_FILTER } from '../actions/actions';\r\nimport { dynamicsort } from '../../shared/utility/utility';\r\n// import dataList from '../../assets/data.json';\r\n\r\nconst filterList = {\r\n    'Species': [\r\n        { id: 1, name: 'Human' },\r\n        { id: 2, name: 'Mytholog' },\r\n        { id: 3, name: 'Other Species', nonList: [ 'Human', 'Mytholog' ] }\r\n    ],\r\n    'Gender': [\r\n        { id: 4, name: 'Male' },\r\n        { id: 5, name: 'Female' }\r\n    ],\r\n    'Origin': [\r\n        { id: 6, name: 'Unknown' },\r\n        { id: 7, name: 'Post-Apocalyptic Earth' },\r\n        { id: 8, name: 'Nuptia 4' },\r\n        { id: 9, name: 'Other Origins', nonList: [ 'Unknown', 'Post-Apocalyptic Earth', 'Nuptia 4' ] }\r\n    ]\r\n}\r\n\r\nconst initState = {\r\n    dataList: [],\r\n    dataInfo: {},\r\n    filteredDataList: [],\r\n    isFilterApplied: false,\r\n    filters: filterList,\r\n    selectedFilters: [],\r\n    isSearchFilter: false,\r\n    isSortFilter: false\r\n}\r\n\r\nconst updateDataList = (state, action) => {\r\n    return {\r\n        ...state,\r\n        dataList: [ ...state.dataList, ...action.data.results ],\r\n        dataInfo: action.data.info\r\n    }\r\n}\r\n\r\nconst getFilteredData = (dataList, selectedFilters) => {\r\n    let filteredData = [];\r\n    const validateFilter = val => {\r\n        let isValid = false;\r\n\r\n        selectedFilters.some((item) => {\r\n            if(item.filterKey === 'species') {\r\n                isValid = item.nonList ?\r\n                    item.nonList.indexOf(val[ item.filterKey ]) === -1 :\r\n                    val[ item.filterKey ] === item.name;\r\n            }\r\n            else if(item.filterKey === 'origin') {\r\n                isValid = item.nonList ?\r\n                item.nonList.indexOf(val[ item.filterKey ].name) === -1 :\r\n                val[ item.filterKey ].name === item.name;\r\n            }\r\n            else {\r\n                isValid = val[ item.filterKey ] === item.name;\r\n            }\r\n\r\n            if(isValid) return isValid;\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    filteredData = dataList.filter(item => (validateFilter(item)));\r\n    \r\n    return filteredData;\r\n}\r\n\r\nconst removeFilteritem = (state, filterItem) => {\r\n    const selectedFilters = [ ...state.selectedFilters ];\r\n    const existedItemIndex= selectedFilters.findIndex(item=> item.id === filterItem.id);\r\n    selectedFilters.splice(existedItemIndex, 1);\r\n\r\n    return selectedFilters;\r\n}\r\n\r\nconst updateFilter = (state, action) => {\r\n    let selectedFilters = [ ...state.selectedFilters ];\r\n    const curItem = action.data.item;\r\n    const hasFilter = selectedFilters.length > 0 ?\r\n        selectedFilters.filter(item => (item.id === curItem.id)) : [];\r\n\r\n    if(hasFilter.length > 0 && !action.data.isChecked) {\r\n        selectedFilters = removeFilteritem(state, curItem);\r\n    }\r\n    else {\r\n        selectedFilters.push(curItem);\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedFilters,\r\n        filteredDataList: getFilteredData([ ...state.dataList ], selectedFilters),\r\n        isFilterApplied: selectedFilters.length > 0 ? true : false\r\n    }\r\n}\r\n\r\nconst removeFilter = (state, action) => {\r\n    const selectedFilters = removeFilteritem(state, action.data);\r\n    \r\n    return {\r\n        ...state,\r\n        selectedFilters,\r\n        filteredDataList: getFilteredData([ ...state.dataList ], selectedFilters),\r\n        isFilterApplied: selectedFilters.length > 0 ? true : false\r\n    }\r\n}\r\n\r\nconst searchFilter = (state, action) => {\r\n    const searchText = action.data.searchText;\r\n    const dataList = state.isFilterApplied ? [ ...state.filteredDataList ] : [ ...state.dataList ];\r\n    let searchFilterList = [];\r\n    if (searchText.length > 0) {\r\n        searchFilterList = dataList.filter(item => (item.name.toLowerCase().includes(searchText.toLowerCase())));\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        filteredDataList: searchText.length > 0 ? searchFilterList : dataList,\r\n        isFilterApplied: state.selectedFilters.length > 0 || searchText.length > 0 ? true : false,\r\n        isSearchFilter: searchText.length > 0 ? true : false\r\n    }\r\n}\r\n\r\nconst sortFilter = (state, action) => {\r\n    const sortKey = action.data.sortKey;\r\n    const dataList = state.isFilterApplied ? [ ...state.filteredDataList ] : [ ...state.dataList ];\r\n    const searchFilterList = dataList.sort(dynamicsort(sortKey, 'id'));\r\n\r\n    return {\r\n        ...state,\r\n        filteredDataList: searchFilterList,\r\n        isFilterApplied: state.selectedFilters.length > 0 || sortKey.length > 0 ? true : false,\r\n        isSortFilter: true\r\n    }\r\n}\r\n\r\nconst rootReducer= (state = initState, action)=>{\r\n    switch (action.type) {\r\n        case RECEIVE_API_DATA:\r\n          return updateDataList(state, action);\r\n        case UPDATE_FILTER_DATA:\r\n          return updateFilter(state, action);\r\n        case REMOVE_FILTER:\r\n          return removeFilter(state, action);\r\n        case SEARCH_FILTER:\r\n          return searchFilter(state, action);\r\n        case SORT_FILTER:\r\n          return sortFilter(state, action);\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","export const dynamicsort= (order, property) => {\r\n    var sortOrder = -1;\r\n    if(order === 'asc'){\r\n        sortOrder = 1;\r\n    }\r\n    return function (a, b){\r\n        const valA = a[ property ];\r\n        const valB = b[ property ];\r\n        if(valA < valB){\r\n                return -1 * sortOrder;\r\n        }else if(valA > valB){\r\n                return 1 * sortOrder;\r\n        }else{\r\n                return 0 * sortOrder;\r\n        }\r\n    }\r\n}","export const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('https://rickandmortyapi.com/api/character/');\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n};  ","import { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { REQUEST_API_DATA, receiveApiData } from './actions/actions';\r\nimport { fetchData } from './api';\r\n    \r\nfunction* getApiData(action) {\r\n  try {\r\n    const data = yield call(fetchData);\r\n    yield put(receiveApiData(data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_API_DATA, getApiData);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport mySaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\n// then run the saga\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport Layout from './components/layout/layout';\nimport store from './store/store';\n\nfunction App() {\n\n  return (\n      <Provider store={ store }>\n          <Layout />\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}